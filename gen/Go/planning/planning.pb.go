// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.26.0
// 	protoc        v3.17.3
// source: planning/planning.proto

package planning

import (
	context "context"
	common "github.com/jalexanderII/zero_fintech/gen/Go/common"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type CreatePaymentPlanRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PaymentTasks []*common.PaymentTask `protobuf:"bytes,1,rep,name=payment_tasks,json=paymentTasks,proto3" json:"payment_tasks,omitempty"`
}

func (x *CreatePaymentPlanRequest) Reset() {
	*x = CreatePaymentPlanRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_planning_planning_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreatePaymentPlanRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreatePaymentPlanRequest) ProtoMessage() {}

func (x *CreatePaymentPlanRequest) ProtoReflect() protoreflect.Message {
	mi := &file_planning_planning_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreatePaymentPlanRequest.ProtoReflect.Descriptor instead.
func (*CreatePaymentPlanRequest) Descriptor() ([]byte, []int) {
	return file_planning_planning_proto_rawDescGZIP(), []int{0}
}

func (x *CreatePaymentPlanRequest) GetPaymentTasks() []*common.PaymentTask {
	if x != nil {
		return x.PaymentTasks
	}
	return nil
}

var File_planning_planning_proto protoreflect.FileDescriptor

var file_planning_planning_proto_rawDesc = []byte{
	0x0a, 0x17, 0x70, 0x6c, 0x61, 0x6e, 0x6e, 0x69, 0x6e, 0x67, 0x2f, 0x70, 0x6c, 0x61, 0x6e, 0x6e,
	0x69, 0x6e, 0x67, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x08, 0x70, 0x6c, 0x61, 0x6e, 0x6e,
	0x69, 0x6e, 0x67, 0x1a, 0x1b, 0x70, 0x6c, 0x61, 0x6e, 0x6e, 0x69, 0x6e, 0x67, 0x2f, 0x70, 0x61,
	0x79, 0x6d, 0x65, 0x6e, 0x74, 0x5f, 0x70, 0x6c, 0x61, 0x6e, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x1a, 0x19, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2f, 0x70, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74,
	0x5f, 0x74, 0x61, 0x73, 0x6b, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x19, 0x63, 0x6f, 0x6d,
	0x6d, 0x6f, 0x6e, 0x2f, 0x70, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x5f, 0x70, 0x6c, 0x61, 0x6e,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x54, 0x0a, 0x18, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65,
	0x50, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x50, 0x6c, 0x61, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x12, 0x38, 0x0a, 0x0d, 0x70, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x5f, 0x74, 0x61,
	0x73, 0x6b, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x13, 0x2e, 0x63, 0x6f, 0x6d, 0x6d,
	0x6f, 0x6e, 0x2e, 0x50, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x54, 0x61, 0x73, 0x6b, 0x52, 0x0c,
	0x70, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x54, 0x61, 0x73, 0x6b, 0x73, 0x32, 0x85, 0x04, 0x0a,
	0x08, 0x50, 0x6c, 0x61, 0x6e, 0x6e, 0x69, 0x6e, 0x67, 0x12, 0x54, 0x0a, 0x11, 0x43, 0x72, 0x65,
	0x61, 0x74, 0x65, 0x50, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x50, 0x6c, 0x61, 0x6e, 0x12, 0x22,
	0x2e, 0x70, 0x6c, 0x61, 0x6e, 0x6e, 0x69, 0x6e, 0x67, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65,
	0x50, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x50, 0x6c, 0x61, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x1a, 0x1b, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x50, 0x61, 0x79, 0x6d,
	0x65, 0x6e, 0x74, 0x50, 0x6c, 0x61, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12,
	0x56, 0x0a, 0x11, 0x4d, 0x6f, 0x64, 0x69, 0x66, 0x79, 0x50, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74,
	0x50, 0x6c, 0x61, 0x6e, 0x12, 0x24, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x55, 0x70,
	0x64, 0x61, 0x74, 0x65, 0x50, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x50, 0x6c, 0x61, 0x6e, 0x50,
	0x6c, 0x61, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1b, 0x2e, 0x63, 0x6f, 0x6d,
	0x6d, 0x6f, 0x6e, 0x2e, 0x50, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x50, 0x6c, 0x61, 0x6e, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x46, 0x0a, 0x0e, 0x47, 0x65, 0x74, 0x50, 0x61,
	0x79, 0x6d, 0x65, 0x6e, 0x74, 0x50, 0x6c, 0x61, 0x6e, 0x12, 0x1f, 0x2e, 0x70, 0x6c, 0x61, 0x6e,
	0x6e, 0x69, 0x6e, 0x67, 0x2e, 0x47, 0x65, 0x74, 0x50, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x50,
	0x6c, 0x61, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x13, 0x2e, 0x63, 0x6f, 0x6d,
	0x6d, 0x6f, 0x6e, 0x2e, 0x50, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x50, 0x6c, 0x61, 0x6e, 0x12,
	0x57, 0x0a, 0x10, 0x4c, 0x69, 0x73, 0x74, 0x50, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x50, 0x6c,
	0x61, 0x6e, 0x73, 0x12, 0x20, 0x2e, 0x70, 0x6c, 0x61, 0x6e, 0x6e, 0x69, 0x6e, 0x67, 0x2e, 0x4c,
	0x69, 0x73, 0x74, 0x50, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x50, 0x6c, 0x61, 0x6e, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x21, 0x2e, 0x70, 0x6c, 0x61, 0x6e, 0x6e, 0x69, 0x6e, 0x67,
	0x2e, 0x4c, 0x69, 0x73, 0x74, 0x50, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x50, 0x6c, 0x61, 0x6e,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x4c, 0x0a, 0x11, 0x55, 0x70, 0x64, 0x61,
	0x74, 0x65, 0x50, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x50, 0x6c, 0x61, 0x6e, 0x12, 0x22, 0x2e,
	0x70, 0x6c, 0x61, 0x6e, 0x6e, 0x69, 0x6e, 0x67, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x50,
	0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x50, 0x6c, 0x61, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x1a, 0x13, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x50, 0x61, 0x79, 0x6d, 0x65,
	0x6e, 0x74, 0x50, 0x6c, 0x61, 0x6e, 0x12, 0x5c, 0x0a, 0x11, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65,
	0x50, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x50, 0x6c, 0x61, 0x6e, 0x12, 0x22, 0x2e, 0x70, 0x6c,
	0x61, 0x6e, 0x6e, 0x69, 0x6e, 0x67, 0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x50, 0x61, 0x79,
	0x6d, 0x65, 0x6e, 0x74, 0x50, 0x6c, 0x61, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a,
	0x23, 0x2e, 0x70, 0x6c, 0x61, 0x6e, 0x6e, 0x69, 0x6e, 0x67, 0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74,
	0x65, 0x50, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x50, 0x6c, 0x61, 0x6e, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x42, 0x36, 0x5a, 0x34, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63,
	0x6f, 0x6d, 0x2f, 0x6a, 0x61, 0x6c, 0x65, 0x78, 0x61, 0x6e, 0x64, 0x65, 0x72, 0x49, 0x49, 0x2f,
	0x7a, 0x65, 0x72, 0x6f, 0x5f, 0x66, 0x69, 0x6e, 0x74, 0x65, 0x63, 0x68, 0x2f, 0x67, 0x65, 0x6e,
	0x2f, 0x47, 0x6f, 0x2f, 0x70, 0x6c, 0x61, 0x6e, 0x6e, 0x69, 0x6e, 0x67, 0x62, 0x06, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_planning_planning_proto_rawDescOnce sync.Once
	file_planning_planning_proto_rawDescData = file_planning_planning_proto_rawDesc
)

func file_planning_planning_proto_rawDescGZIP() []byte {
	file_planning_planning_proto_rawDescOnce.Do(func() {
		file_planning_planning_proto_rawDescData = protoimpl.X.CompressGZIP(file_planning_planning_proto_rawDescData)
	})
	return file_planning_planning_proto_rawDescData
}

var file_planning_planning_proto_msgTypes = make([]protoimpl.MessageInfo, 1)
var file_planning_planning_proto_goTypes = []interface{}{
	(*CreatePaymentPlanRequest)(nil),            // 0: planning.CreatePaymentPlanRequest
	(*common.PaymentTask)(nil),                  // 1: common.PaymentTask
	(*common.UpdatePaymentPlanPlanRequest)(nil), // 2: common.UpdatePaymentPlanPlanRequest
	(*GetPaymentPlanRequest)(nil),               // 3: planning.GetPaymentPlanRequest
	(*ListPaymentPlanRequest)(nil),              // 4: planning.ListPaymentPlanRequest
	(*UpdatePaymentPlanRequest)(nil),            // 5: planning.UpdatePaymentPlanRequest
	(*DeletePaymentPlanRequest)(nil),            // 6: planning.DeletePaymentPlanRequest
	(*common.PaymentPlanResponse)(nil),          // 7: common.PaymentPlanResponse
	(*common.PaymentPlan)(nil),                  // 8: common.PaymentPlan
	(*ListPaymentPlanResponse)(nil),             // 9: planning.ListPaymentPlanResponse
	(*DeletePaymentPlanResponse)(nil),           // 10: planning.DeletePaymentPlanResponse
}
var file_planning_planning_proto_depIdxs = []int32{
	1,  // 0: planning.CreatePaymentPlanRequest.payment_tasks:type_name -> common.PaymentTask
	0,  // 1: planning.Planning.CreatePaymentPlan:input_type -> planning.CreatePaymentPlanRequest
	2,  // 2: planning.Planning.ModifyPaymentPlan:input_type -> common.UpdatePaymentPlanPlanRequest
	3,  // 3: planning.Planning.GetPaymentPlan:input_type -> planning.GetPaymentPlanRequest
	4,  // 4: planning.Planning.ListPaymentPlans:input_type -> planning.ListPaymentPlanRequest
	5,  // 5: planning.Planning.UpdatePaymentPlan:input_type -> planning.UpdatePaymentPlanRequest
	6,  // 6: planning.Planning.DeletePaymentPlan:input_type -> planning.DeletePaymentPlanRequest
	7,  // 7: planning.Planning.CreatePaymentPlan:output_type -> common.PaymentPlanResponse
	7,  // 8: planning.Planning.ModifyPaymentPlan:output_type -> common.PaymentPlanResponse
	8,  // 9: planning.Planning.GetPaymentPlan:output_type -> common.PaymentPlan
	9,  // 10: planning.Planning.ListPaymentPlans:output_type -> planning.ListPaymentPlanResponse
	8,  // 11: planning.Planning.UpdatePaymentPlan:output_type -> common.PaymentPlan
	10, // 12: planning.Planning.DeletePaymentPlan:output_type -> planning.DeletePaymentPlanResponse
	7,  // [7:13] is the sub-list for method output_type
	1,  // [1:7] is the sub-list for method input_type
	1,  // [1:1] is the sub-list for extension type_name
	1,  // [1:1] is the sub-list for extension extendee
	0,  // [0:1] is the sub-list for field type_name
}

func init() { file_planning_planning_proto_init() }
func file_planning_planning_proto_init() {
	if File_planning_planning_proto != nil {
		return
	}
	file_planning_payment_plan_proto_init()
	if !protoimpl.UnsafeEnabled {
		file_planning_planning_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreatePaymentPlanRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_planning_planning_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   1,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_planning_planning_proto_goTypes,
		DependencyIndexes: file_planning_planning_proto_depIdxs,
		MessageInfos:      file_planning_planning_proto_msgTypes,
	}.Build()
	File_planning_planning_proto = out.File
	file_planning_planning_proto_rawDesc = nil
	file_planning_planning_proto_goTypes = nil
	file_planning_planning_proto_depIdxs = nil
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConnInterface

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion6

// PlanningClient is the client API for Planning service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type PlanningClient interface {
	// CreatePaymentPlan accepts a request from Core service with PaymentTasks to create a PaymentPlan for
	CreatePaymentPlan(ctx context.Context, in *CreatePaymentPlanRequest, opts ...grpc.CallOption) (*common.PaymentPlanResponse, error)
	// ModifyPaymentPlan accepts a request from Core service with user MetaData to modify an existing Payment Plan
	ModifyPaymentPlan(ctx context.Context, in *common.UpdatePaymentPlanPlanRequest, opts ...grpc.CallOption) (*common.PaymentPlanResponse, error)
	//  CRUD METHODS
	GetPaymentPlan(ctx context.Context, in *GetPaymentPlanRequest, opts ...grpc.CallOption) (*common.PaymentPlan, error)
	ListPaymentPlans(ctx context.Context, in *ListPaymentPlanRequest, opts ...grpc.CallOption) (*ListPaymentPlanResponse, error)
	UpdatePaymentPlan(ctx context.Context, in *UpdatePaymentPlanRequest, opts ...grpc.CallOption) (*common.PaymentPlan, error)
	DeletePaymentPlan(ctx context.Context, in *DeletePaymentPlanRequest, opts ...grpc.CallOption) (*DeletePaymentPlanResponse, error)
}

type planningClient struct {
	cc grpc.ClientConnInterface
}

func NewPlanningClient(cc grpc.ClientConnInterface) PlanningClient {
	return &planningClient{cc}
}

func (c *planningClient) CreatePaymentPlan(ctx context.Context, in *CreatePaymentPlanRequest, opts ...grpc.CallOption) (*common.PaymentPlanResponse, error) {
	out := new(common.PaymentPlanResponse)
	err := c.cc.Invoke(ctx, "/planning.Planning/CreatePaymentPlan", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *planningClient) ModifyPaymentPlan(ctx context.Context, in *common.UpdatePaymentPlanPlanRequest, opts ...grpc.CallOption) (*common.PaymentPlanResponse, error) {
	out := new(common.PaymentPlanResponse)
	err := c.cc.Invoke(ctx, "/planning.Planning/ModifyPaymentPlan", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *planningClient) GetPaymentPlan(ctx context.Context, in *GetPaymentPlanRequest, opts ...grpc.CallOption) (*common.PaymentPlan, error) {
	out := new(common.PaymentPlan)
	err := c.cc.Invoke(ctx, "/planning.Planning/GetPaymentPlan", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *planningClient) ListPaymentPlans(ctx context.Context, in *ListPaymentPlanRequest, opts ...grpc.CallOption) (*ListPaymentPlanResponse, error) {
	out := new(ListPaymentPlanResponse)
	err := c.cc.Invoke(ctx, "/planning.Planning/ListPaymentPlans", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *planningClient) UpdatePaymentPlan(ctx context.Context, in *UpdatePaymentPlanRequest, opts ...grpc.CallOption) (*common.PaymentPlan, error) {
	out := new(common.PaymentPlan)
	err := c.cc.Invoke(ctx, "/planning.Planning/UpdatePaymentPlan", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *planningClient) DeletePaymentPlan(ctx context.Context, in *DeletePaymentPlanRequest, opts ...grpc.CallOption) (*DeletePaymentPlanResponse, error) {
	out := new(DeletePaymentPlanResponse)
	err := c.cc.Invoke(ctx, "/planning.Planning/DeletePaymentPlan", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// PlanningServer is the server API for Planning service.
type PlanningServer interface {
	// CreatePaymentPlan accepts a request from Core service with PaymentTasks to create a PaymentPlan for
	CreatePaymentPlan(context.Context, *CreatePaymentPlanRequest) (*common.PaymentPlanResponse, error)
	// ModifyPaymentPlan accepts a request from Core service with user MetaData to modify an existing Payment Plan
	ModifyPaymentPlan(context.Context, *common.UpdatePaymentPlanPlanRequest) (*common.PaymentPlanResponse, error)
	//  CRUD METHODS
	GetPaymentPlan(context.Context, *GetPaymentPlanRequest) (*common.PaymentPlan, error)
	ListPaymentPlans(context.Context, *ListPaymentPlanRequest) (*ListPaymentPlanResponse, error)
	UpdatePaymentPlan(context.Context, *UpdatePaymentPlanRequest) (*common.PaymentPlan, error)
	DeletePaymentPlan(context.Context, *DeletePaymentPlanRequest) (*DeletePaymentPlanResponse, error)
}

// UnimplementedPlanningServer can be embedded to have forward compatible implementations.
type UnimplementedPlanningServer struct {
}

func (*UnimplementedPlanningServer) CreatePaymentPlan(context.Context, *CreatePaymentPlanRequest) (*common.PaymentPlanResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CreatePaymentPlan not implemented")
}
func (*UnimplementedPlanningServer) ModifyPaymentPlan(context.Context, *common.UpdatePaymentPlanPlanRequest) (*common.PaymentPlanResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ModifyPaymentPlan not implemented")
}
func (*UnimplementedPlanningServer) GetPaymentPlan(context.Context, *GetPaymentPlanRequest) (*common.PaymentPlan, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetPaymentPlan not implemented")
}
func (*UnimplementedPlanningServer) ListPaymentPlans(context.Context, *ListPaymentPlanRequest) (*ListPaymentPlanResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ListPaymentPlans not implemented")
}
func (*UnimplementedPlanningServer) UpdatePaymentPlan(context.Context, *UpdatePaymentPlanRequest) (*common.PaymentPlan, error) {
	return nil, status.Errorf(codes.Unimplemented, "method UpdatePaymentPlan not implemented")
}
func (*UnimplementedPlanningServer) DeletePaymentPlan(context.Context, *DeletePaymentPlanRequest) (*DeletePaymentPlanResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method DeletePaymentPlan not implemented")
}

func RegisterPlanningServer(s *grpc.Server, srv PlanningServer) {
	s.RegisterService(&_Planning_serviceDesc, srv)
}

func _Planning_CreatePaymentPlan_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CreatePaymentPlanRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PlanningServer).CreatePaymentPlan(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/planning.Planning/CreatePaymentPlan",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PlanningServer).CreatePaymentPlan(ctx, req.(*CreatePaymentPlanRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Planning_ModifyPaymentPlan_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(common.UpdatePaymentPlanPlanRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PlanningServer).ModifyPaymentPlan(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/planning.Planning/ModifyPaymentPlan",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PlanningServer).ModifyPaymentPlan(ctx, req.(*common.UpdatePaymentPlanPlanRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Planning_GetPaymentPlan_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetPaymentPlanRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PlanningServer).GetPaymentPlan(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/planning.Planning/GetPaymentPlan",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PlanningServer).GetPaymentPlan(ctx, req.(*GetPaymentPlanRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Planning_ListPaymentPlans_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ListPaymentPlanRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PlanningServer).ListPaymentPlans(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/planning.Planning/ListPaymentPlans",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PlanningServer).ListPaymentPlans(ctx, req.(*ListPaymentPlanRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Planning_UpdatePaymentPlan_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(UpdatePaymentPlanRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PlanningServer).UpdatePaymentPlan(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/planning.Planning/UpdatePaymentPlan",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PlanningServer).UpdatePaymentPlan(ctx, req.(*UpdatePaymentPlanRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Planning_DeletePaymentPlan_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(DeletePaymentPlanRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PlanningServer).DeletePaymentPlan(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/planning.Planning/DeletePaymentPlan",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PlanningServer).DeletePaymentPlan(ctx, req.(*DeletePaymentPlanRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _Planning_serviceDesc = grpc.ServiceDesc{
	ServiceName: "planning.Planning",
	HandlerType: (*PlanningServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "CreatePaymentPlan",
			Handler:    _Planning_CreatePaymentPlan_Handler,
		},
		{
			MethodName: "ModifyPaymentPlan",
			Handler:    _Planning_ModifyPaymentPlan_Handler,
		},
		{
			MethodName: "GetPaymentPlan",
			Handler:    _Planning_GetPaymentPlan_Handler,
		},
		{
			MethodName: "ListPaymentPlans",
			Handler:    _Planning_ListPaymentPlans_Handler,
		},
		{
			MethodName: "UpdatePaymentPlan",
			Handler:    _Planning_UpdatePaymentPlan_Handler,
		},
		{
			MethodName: "DeletePaymentPlan",
			Handler:    _Planning_DeletePaymentPlan_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "planning/planning.proto",
}
