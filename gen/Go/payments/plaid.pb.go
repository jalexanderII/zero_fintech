// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.26.0
// 	protoc        v3.19.4
// source: payments/plaid.proto

package payments

import (
	context "context"
	common "github.com/jalexanderII/zero_fintech/gen/Go/common"
	core "github.com/jalexanderII/zero_fintech/gen/Go/core"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type GetAccountDetailsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	User        *core.User `protobuf:"bytes,1,opt,name=user,proto3" json:"user,omitempty"`
	AccessToken string     `protobuf:"bytes,2,opt,name=access_token,json=accessToken,proto3" json:"access_token,omitempty"`
	Months      int64      `protobuf:"varint,3,opt,name=months,proto3" json:"months,omitempty"`
}

func (x *GetAccountDetailsRequest) Reset() {
	*x = GetAccountDetailsRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_payments_plaid_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetAccountDetailsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetAccountDetailsRequest) ProtoMessage() {}

func (x *GetAccountDetailsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_payments_plaid_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetAccountDetailsRequest.ProtoReflect.Descriptor instead.
func (*GetAccountDetailsRequest) Descriptor() ([]byte, []int) {
	return file_payments_plaid_proto_rawDescGZIP(), []int{0}
}

func (x *GetAccountDetailsRequest) GetUser() *core.User {
	if x != nil {
		return x.User
	}
	return nil
}

func (x *GetAccountDetailsRequest) GetAccessToken() string {
	if x != nil {
		return x.AccessToken
	}
	return ""
}

func (x *GetAccountDetailsRequest) GetMonths() int64 {
	if x != nil {
		return x.Months
	}
	return 0
}

type GetAccountDetailsResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AccountDetailsResponse *AccountDetailsResponse `protobuf:"bytes,1,opt,name=account_details_response,json=accountDetailsResponse,proto3" json:"account_details_response,omitempty"`
}

func (x *GetAccountDetailsResponse) Reset() {
	*x = GetAccountDetailsResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_payments_plaid_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetAccountDetailsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetAccountDetailsResponse) ProtoMessage() {}

func (x *GetAccountDetailsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_payments_plaid_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetAccountDetailsResponse.ProtoReflect.Descriptor instead.
func (*GetAccountDetailsResponse) Descriptor() ([]byte, []int) {
	return file_payments_plaid_proto_rawDescGZIP(), []int{1}
}

func (x *GetAccountDetailsResponse) GetAccountDetailsResponse() *AccountDetailsResponse {
	if x != nil {
		return x.AccountDetailsResponse
	}
	return nil
}

type AccountDetailsResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Accounts     []*core.Account     `protobuf:"bytes,1,rep,name=accounts,proto3" json:"accounts,omitempty"`
	Transactions []*core.Transaction `protobuf:"bytes,2,rep,name=transactions,proto3" json:"transactions,omitempty"`
}

func (x *AccountDetailsResponse) Reset() {
	*x = AccountDetailsResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_payments_plaid_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AccountDetailsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AccountDetailsResponse) ProtoMessage() {}

func (x *AccountDetailsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_payments_plaid_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AccountDetailsResponse.ProtoReflect.Descriptor instead.
func (*AccountDetailsResponse) Descriptor() ([]byte, []int) {
	return file_payments_plaid_proto_rawDescGZIP(), []int{2}
}

func (x *AccountDetailsResponse) GetAccounts() []*core.Account {
	if x != nil {
		return x.Accounts
	}
	return nil
}

func (x *AccountDetailsResponse) GetTransactions() []*core.Transaction {
	if x != nil {
		return x.Transactions
	}
	return nil
}

var File_payments_plaid_proto protoreflect.FileDescriptor

var file_payments_plaid_proto_rawDesc = []byte{
	0x0a, 0x14, 0x70, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x2f, 0x70, 0x6c, 0x61, 0x69, 0x64,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x08, 0x70, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x73,
	0x1a, 0x10, 0x63, 0x6f, 0x72, 0x65, 0x2f, 0x75, 0x73, 0x65, 0x72, 0x73, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x1a, 0x13, 0x63, 0x6f, 0x72, 0x65, 0x2f, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74,
	0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x17, 0x63, 0x6f, 0x72, 0x65, 0x2f, 0x74, 0x72,
	0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x1a, 0x13, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2f, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x75, 0x0a, 0x18, 0x47, 0x65, 0x74, 0x41, 0x63, 0x63, 0x6f,
	0x75, 0x6e, 0x74, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x12, 0x1e, 0x0a, 0x04, 0x75, 0x73, 0x65, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x0a, 0x2e, 0x63, 0x6f, 0x72, 0x65, 0x2e, 0x55, 0x73, 0x65, 0x72, 0x52, 0x04, 0x75, 0x73, 0x65,
	0x72, 0x12, 0x21, 0x0a, 0x0c, 0x61, 0x63, 0x63, 0x65, 0x73, 0x73, 0x5f, 0x74, 0x6f, 0x6b, 0x65,
	0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x61, 0x63, 0x63, 0x65, 0x73, 0x73, 0x54,
	0x6f, 0x6b, 0x65, 0x6e, 0x12, 0x16, 0x0a, 0x06, 0x6d, 0x6f, 0x6e, 0x74, 0x68, 0x73, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x6d, 0x6f, 0x6e, 0x74, 0x68, 0x73, 0x22, 0x77, 0x0a, 0x19,
	0x47, 0x65, 0x74, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c,
	0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x5a, 0x0a, 0x18, 0x61, 0x63, 0x63,
	0x6f, 0x75, 0x6e, 0x74, 0x5f, 0x64, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x5f, 0x72, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x20, 0x2e, 0x70, 0x61,
	0x79, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x2e, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x44, 0x65,
	0x74, 0x61, 0x69, 0x6c, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x52, 0x16, 0x61,
	0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x7a, 0x0a, 0x16, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74,
	0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12,
	0x29, 0x0a, 0x08, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28,
	0x0b, 0x32, 0x0d, 0x2e, 0x63, 0x6f, 0x72, 0x65, 0x2e, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74,
	0x52, 0x08, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x73, 0x12, 0x35, 0x0a, 0x0c, 0x74, 0x72,
	0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b,
	0x32, 0x11, 0x2e, 0x63, 0x6f, 0x72, 0x65, 0x2e, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74,
	0x69, 0x6f, 0x6e, 0x52, 0x0c, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e,
	0x73, 0x32, 0x98, 0x01, 0x0a, 0x05, 0x50, 0x6c, 0x61, 0x69, 0x64, 0x12, 0x5c, 0x0a, 0x11, 0x47,
	0x65, 0x74, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73,
	0x12, 0x22, 0x2e, 0x70, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x2e, 0x47, 0x65, 0x74, 0x41,
	0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x1a, 0x23, 0x2e, 0x70, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x2e,
	0x47, 0x65, 0x74, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c,
	0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x31, 0x0a, 0x04, 0x4c, 0x69, 0x6e,
	0x6b, 0x12, 0x13, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x4c, 0x69, 0x6e, 0x6b, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x14, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e,
	0x4c, 0x69, 0x6e, 0x6b, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x42, 0x36, 0x5a, 0x34,
	0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x6a, 0x61, 0x6c, 0x65, 0x78,
	0x61, 0x6e, 0x64, 0x65, 0x72, 0x49, 0x49, 0x2f, 0x7a, 0x65, 0x72, 0x6f, 0x5f, 0x66, 0x69, 0x6e,
	0x74, 0x65, 0x63, 0x68, 0x2f, 0x67, 0x65, 0x6e, 0x2f, 0x47, 0x6f, 0x2f, 0x70, 0x61, 0x79, 0x6d,
	0x65, 0x6e, 0x74, 0x73, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_payments_plaid_proto_rawDescOnce sync.Once
	file_payments_plaid_proto_rawDescData = file_payments_plaid_proto_rawDesc
)

func file_payments_plaid_proto_rawDescGZIP() []byte {
	file_payments_plaid_proto_rawDescOnce.Do(func() {
		file_payments_plaid_proto_rawDescData = protoimpl.X.CompressGZIP(file_payments_plaid_proto_rawDescData)
	})
	return file_payments_plaid_proto_rawDescData
}

var file_payments_plaid_proto_msgTypes = make([]protoimpl.MessageInfo, 3)
var file_payments_plaid_proto_goTypes = []interface{}{
	(*GetAccountDetailsRequest)(nil),  // 0: payments.GetAccountDetailsRequest
	(*GetAccountDetailsResponse)(nil), // 1: payments.GetAccountDetailsResponse
	(*AccountDetailsResponse)(nil),    // 2: payments.AccountDetailsResponse
	(*core.User)(nil),                 // 3: core.User
	(*core.Account)(nil),              // 4: core.Account
	(*core.Transaction)(nil),          // 5: core.Transaction
	(*common.LinkRequest)(nil),        // 6: common.LinkRequest
	(*common.LinkResponse)(nil),       // 7: common.LinkResponse
}
var file_payments_plaid_proto_depIdxs = []int32{
	3, // 0: payments.GetAccountDetailsRequest.user:type_name -> core.User
	2, // 1: payments.GetAccountDetailsResponse.account_details_response:type_name -> payments.AccountDetailsResponse
	4, // 2: payments.AccountDetailsResponse.accounts:type_name -> core.Account
	5, // 3: payments.AccountDetailsResponse.transactions:type_name -> core.Transaction
	0, // 4: payments.Plaid.GetAccountDetails:input_type -> payments.GetAccountDetailsRequest
	6, // 5: payments.Plaid.Link:input_type -> common.LinkRequest
	1, // 6: payments.Plaid.GetAccountDetails:output_type -> payments.GetAccountDetailsResponse
	7, // 7: payments.Plaid.Link:output_type -> common.LinkResponse
	6, // [6:8] is the sub-list for method output_type
	4, // [4:6] is the sub-list for method input_type
	4, // [4:4] is the sub-list for extension type_name
	4, // [4:4] is the sub-list for extension extendee
	0, // [0:4] is the sub-list for field type_name
}

func init() { file_payments_plaid_proto_init() }
func file_payments_plaid_proto_init() {
	if File_payments_plaid_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_payments_plaid_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetAccountDetailsRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_payments_plaid_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetAccountDetailsResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_payments_plaid_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AccountDetailsResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_payments_plaid_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   3,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_payments_plaid_proto_goTypes,
		DependencyIndexes: file_payments_plaid_proto_depIdxs,
		MessageInfos:      file_payments_plaid_proto_msgTypes,
	}.Build()
	File_payments_plaid_proto = out.File
	file_payments_plaid_proto_rawDesc = nil
	file_payments_plaid_proto_goTypes = nil
	file_payments_plaid_proto_depIdxs = nil
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConnInterface

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion6

// PlaidClient is the client API for Plaid service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type PlaidClient interface {
	// GetAccountDetails fetches Plaid Liabilities and Transactions Endpoint and returns
	// a list of Accounts and Transactions
	GetAccountDetails(ctx context.Context, in *GetAccountDetailsRequest, opts ...grpc.CallOption) (*GetAccountDetailsResponse, error)
	Link(ctx context.Context, in *common.LinkRequest, opts ...grpc.CallOption) (*common.LinkResponse, error)
}

type plaidClient struct {
	cc grpc.ClientConnInterface
}

func NewPlaidClient(cc grpc.ClientConnInterface) PlaidClient {
	return &plaidClient{cc}
}

func (c *plaidClient) GetAccountDetails(ctx context.Context, in *GetAccountDetailsRequest, opts ...grpc.CallOption) (*GetAccountDetailsResponse, error) {
	out := new(GetAccountDetailsResponse)
	err := c.cc.Invoke(ctx, "/payments.Plaid/GetAccountDetails", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *plaidClient) Link(ctx context.Context, in *common.LinkRequest, opts ...grpc.CallOption) (*common.LinkResponse, error) {
	out := new(common.LinkResponse)
	err := c.cc.Invoke(ctx, "/payments.Plaid/Link", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// PlaidServer is the server API for Plaid service.
type PlaidServer interface {
	// GetAccountDetails fetches Plaid Liabilities and Transactions Endpoint and returns
	// a list of Accounts and Transactions
	GetAccountDetails(context.Context, *GetAccountDetailsRequest) (*GetAccountDetailsResponse, error)
	Link(context.Context, *common.LinkRequest) (*common.LinkResponse, error)
}

// UnimplementedPlaidServer can be embedded to have forward compatible implementations.
type UnimplementedPlaidServer struct {
}

func (*UnimplementedPlaidServer) GetAccountDetails(context.Context, *GetAccountDetailsRequest) (*GetAccountDetailsResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetAccountDetails not implemented")
}
func (*UnimplementedPlaidServer) Link(context.Context, *common.LinkRequest) (*common.LinkResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Link not implemented")
}

func RegisterPlaidServer(s *grpc.Server, srv PlaidServer) {
	s.RegisterService(&_Plaid_serviceDesc, srv)
}

func _Plaid_GetAccountDetails_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetAccountDetailsRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PlaidServer).GetAccountDetails(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/payments.Plaid/GetAccountDetails",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PlaidServer).GetAccountDetails(ctx, req.(*GetAccountDetailsRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Plaid_Link_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(common.LinkRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PlaidServer).Link(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/payments.Plaid/Link",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PlaidServer).Link(ctx, req.(*common.LinkRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _Plaid_serviceDesc = grpc.ServiceDesc{
	ServiceName: "payments.Plaid",
	HandlerType: (*PlaidServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "GetAccountDetails",
			Handler:    _Plaid_GetAccountDetails_Handler,
		},
		{
			MethodName: "Link",
			Handler:    _Plaid_Link_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "payments/plaid.proto",
}
