// Code generated by sqlc. DO NOT EDIT.
// source: query.sql

package genDB

import (
	"context"
	"database/sql"
)

const createPaymentTask = `-- name: CreatePaymentTask :one
INSERT INTO payment_task (user_id,
                          transaction_id,
                          account_id,
                          meta_data)
VALUES ($1,
        $2,
        $3,
        $4) RETURNING payment_task_id, user_id, transaction_id, account_id, meta_data
`

type CreatePaymentTaskParams struct {
	UserID        sql.NullInt32  `json:"user_id"`
	TransactionID int32          `json:"transaction_id"`
	AccountID     int32          `json:"account_id"`
	MetaData      sql.NullString `json:"meta_data"`
}

func (q *Queries) CreatePaymentTask(ctx context.Context, arg CreatePaymentTaskParams) (PaymentTask, error) {
	row := q.db.QueryRowContext(ctx, createPaymentTask,
		arg.UserID,
		arg.TransactionID,
		arg.AccountID,
		arg.MetaData,
	)
	var i PaymentTask
	err := row.Scan(
		&i.PaymentTaskID,
		&i.UserID,
		&i.TransactionID,
		&i.AccountID,
		&i.MetaData,
	)
	return i, err
}
