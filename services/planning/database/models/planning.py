# Generated by the protocol buffer compiler.  DO NOT EDIT!
# sources: planning/payment_plan.proto, planning/planning.proto
# plugin: python-betterproto
from dataclasses import dataclass
from typing import List, Optional

import betterproto
import grpclib

from . import common
from .google import protobuf


@dataclass
class GetPaymentPlanRequest(betterproto.Message):
    """CRUD Methods"""

    payment_plan_id: str = betterproto.string_field(1)


@dataclass
class ListPaymentPlanRequest(betterproto.Message):
    pass


@dataclass
class ListPaymentPlanResponse(betterproto.Message):
    payment_plans: List[common.PaymentPlan] = betterproto.message_field(1)


@dataclass
class UpdatePaymentPlanRequest(betterproto.Message):
    payment_plan_id: str = betterproto.string_field(1)
    payment_plan: common.PaymentPlan = betterproto.message_field(2)
    mask: protobuf.FieldMask = betterproto.message_field(3)


@dataclass
class DeletePaymentPlanRequest(betterproto.Message):
    payment_plan_id: str = betterproto.string_field(1)


@dataclass
class DeletePaymentPlanResponse(betterproto.Message):
    status: common.DELETE_STATUS = betterproto.enum_field(1)
    payment_plan: common.PaymentPlan = betterproto.message_field(2)


@dataclass
class CreatePaymentPlanRequest(betterproto.Message):
    payment_tasks: List[common.PaymentTask] = betterproto.message_field(1)


class PlanningStub(betterproto.ServiceStub):
    async def create_payment_plan(
        self, *, payment_tasks: List[common.PaymentTask] = []
    ) -> common.PaymentPlanResponse:
        """
        CreatePaymentPlan accepts a request from Core service with PaymentTasks
        to create a PaymentPlan for
        """

        request = CreatePaymentPlanRequest()
        if payment_tasks is not None:
            request.payment_tasks = payment_tasks

        return await self._unary_unary(
            "/planning.Planning/CreatePaymentPlan",
            request,
            common.PaymentPlanResponse,
        )

    async def modify_payment_plan(self) -> common.PaymentPlanResponse:
        """
        ModifyPaymentPlan accepts a request from Core service with user
        MetaData to modify an existing Payment Plan
        """

        request = common.UpdatePaymentPlanPlanRequest()

        return await self._unary_unary(
            "/planning.Planning/ModifyPaymentPlan",
            request,
            common.PaymentPlanResponse,
        )

    async def get_payment_plan(
        self, *, payment_plan_id: str = ""
    ) -> common.PaymentPlan:
        """CRUD METHODS"""

        request = GetPaymentPlanRequest()
        request.payment_plan_id = payment_plan_id

        return await self._unary_unary(
            "/planning.Planning/GetPaymentPlan",
            request,
            common.PaymentPlan,
        )

    async def list_payment_plans(self) -> ListPaymentPlanResponse:
        request = ListPaymentPlanRequest()

        return await self._unary_unary(
            "/planning.Planning/ListPaymentPlans",
            request,
            ListPaymentPlanResponse,
        )

    async def update_payment_plan(
        self,
        *,
        payment_plan_id: str = "",
        payment_plan: Optional[common.PaymentPlan] = None,
        mask: Optional[protobuf.FieldMask] = None,
    ) -> common.PaymentPlan:
        request = UpdatePaymentPlanRequest()
        request.payment_plan_id = payment_plan_id
        if payment_plan is not None:
            request.payment_plan = payment_plan
        if mask is not None:
            request.mask = mask

        return await self._unary_unary(
            "/planning.Planning/UpdatePaymentPlan",
            request,
            common.PaymentPlan,
        )

    async def delete_payment_plan(
        self, *, payment_plan_id: str = ""
    ) -> DeletePaymentPlanResponse:
        request = DeletePaymentPlanRequest()
        request.payment_plan_id = payment_plan_id

        return await self._unary_unary(
            "/planning.Planning/DeletePaymentPlan",
            request,
            DeletePaymentPlanResponse,
        )
