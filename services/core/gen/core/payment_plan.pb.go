// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.26.0
// 	protoc        v3.17.3
// source: payment_plan.proto

package core

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	timestamppb "google.golang.org/protobuf/types/known/timestamppb"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type PaymentStatus int32

const (
	PaymentStatus_PAYMENT_STATUS_UNKNOWN PaymentStatus = 0
	// Payment plan is in good standing and all payments are current
	PaymentStatus_PAYMENT_STATUS_CURRENT PaymentStatus = 1
	// This plan is fully paid
	PaymentStatus_PAYMENT_STATUS_COMPLETED PaymentStatus = 2
	// The user has requested this payment to be cancelled
	PaymentStatus_PAYMENT_STATUS_CANCELLED PaymentStatus = 3
	// The payment plan is not current because the user has missed a payment and still have not paid it
	PaymentStatus_PAYMENT_STATUS_IN_DEFAULT PaymentStatus = 4
)

// Enum value maps for PaymentStatus.
var (
	PaymentStatus_name = map[int32]string{
		0: "PAYMENT_STATUS_UNKNOWN",
		1: "PAYMENT_STATUS_CURRENT",
		2: "PAYMENT_STATUS_COMPLETED",
		3: "PAYMENT_STATUS_CANCELLED",
		4: "PAYMENT_STATUS_IN_DEFAULT",
	}
	PaymentStatus_value = map[string]int32{
		"PAYMENT_STATUS_UNKNOWN":    0,
		"PAYMENT_STATUS_CURRENT":    1,
		"PAYMENT_STATUS_COMPLETED":  2,
		"PAYMENT_STATUS_CANCELLED":  3,
		"PAYMENT_STATUS_IN_DEFAULT": 4,
	}
)

func (x PaymentStatus) Enum() *PaymentStatus {
	p := new(PaymentStatus)
	*p = x
	return p
}

func (x PaymentStatus) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (PaymentStatus) Descriptor() protoreflect.EnumDescriptor {
	return file_payment_plan_proto_enumTypes[0].Descriptor()
}

func (PaymentStatus) Type() protoreflect.EnumType {
	return &file_payment_plan_proto_enumTypes[0]
}

func (x PaymentStatus) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use PaymentStatus.Descriptor instead.
func (PaymentStatus) EnumDescriptor() ([]byte, []int) {
	return file_payment_plan_proto_rawDescGZIP(), []int{0}
}

type PaymentPlan struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PaymentId        string           `protobuf:"bytes,1,opt,name=payment_id,json=paymentId,proto3" json:"payment_id,omitempty"`
	UserId           string           `protobuf:"bytes,2,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	PaymentTaskId    []string         `protobuf:"bytes,3,rep,name=payment_task_id,json=paymentTaskId,proto3" json:"payment_task_id,omitempty"`
	Timeline         float32          `protobuf:"fixed32,4,opt,name=timeline,proto3" json:"timeline,omitempty"`
	PaymentFreq      PaymentFrequency `protobuf:"varint,5,opt,name=payment_freq,json=paymentFreq,proto3,enum=core.PaymentFrequency" json:"payment_freq,omitempty"`
	AmountPerPayment float32          `protobuf:"fixed32,6,opt,name=amount_per_payment,json=amountPerPayment,proto3" json:"amount_per_payment,omitempty"`
	PlanType         PlanType         `protobuf:"varint,7,opt,name=plan_type,json=planType,proto3,enum=core.PlanType" json:"plan_type,omitempty"`
	// Expected date the plan should be completed
	EndDate *timestamppb.Timestamp `protobuf:"bytes,8,opt,name=end_date,json=endDate,proto3" json:"end_date,omitempty"`
	// This Payment plan has not completed and is still active
	Active bool `protobuf:"varint,9,opt,name=active,proto3" json:"active,omitempty"`
	// Current status of this plan
	Status PaymentStatus `protobuf:"varint,10,opt,name=status,proto3,enum=core.PaymentStatus" json:"status,omitempty"`
}

func (x *PaymentPlan) Reset() {
	*x = PaymentPlan{}
	if protoimpl.UnsafeEnabled {
		mi := &file_payment_plan_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PaymentPlan) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PaymentPlan) ProtoMessage() {}

func (x *PaymentPlan) ProtoReflect() protoreflect.Message {
	mi := &file_payment_plan_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PaymentPlan.ProtoReflect.Descriptor instead.
func (*PaymentPlan) Descriptor() ([]byte, []int) {
	return file_payment_plan_proto_rawDescGZIP(), []int{0}
}

func (x *PaymentPlan) GetPaymentId() string {
	if x != nil {
		return x.PaymentId
	}
	return ""
}

func (x *PaymentPlan) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

func (x *PaymentPlan) GetPaymentTaskId() []string {
	if x != nil {
		return x.PaymentTaskId
	}
	return nil
}

func (x *PaymentPlan) GetTimeline() float32 {
	if x != nil {
		return x.Timeline
	}
	return 0
}

func (x *PaymentPlan) GetPaymentFreq() PaymentFrequency {
	if x != nil {
		return x.PaymentFreq
	}
	return PaymentFrequency_PAYMENTFREQ_UNKNOWN
}

func (x *PaymentPlan) GetAmountPerPayment() float32 {
	if x != nil {
		return x.AmountPerPayment
	}
	return 0
}

func (x *PaymentPlan) GetPlanType() PlanType {
	if x != nil {
		return x.PlanType
	}
	return PlanType_PLANTYPE_UNKNOWN
}

func (x *PaymentPlan) GetEndDate() *timestamppb.Timestamp {
	if x != nil {
		return x.EndDate
	}
	return nil
}

func (x *PaymentPlan) GetActive() bool {
	if x != nil {
		return x.Active
	}
	return false
}

func (x *PaymentPlan) GetStatus() PaymentStatus {
	if x != nil {
		return x.Status
	}
	return PaymentStatus_PAYMENT_STATUS_UNKNOWN
}

var File_payment_plan_proto protoreflect.FileDescriptor

var file_payment_plan_proto_rawDesc = []byte{
	0x0a, 0x12, 0x70, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x5f, 0x70, 0x6c, 0x61, 0x6e, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x12, 0x04, 0x63, 0x6f, 0x72, 0x65, 0x1a, 0x0c, 0x63, 0x6f, 0x6d, 0x6d,
	0x6f, 0x6e, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1f, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65,
	0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74,
	0x61, 0x6d, 0x70, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x9b, 0x03, 0x0a, 0x0b, 0x50, 0x61,
	0x79, 0x6d, 0x65, 0x6e, 0x74, 0x50, 0x6c, 0x61, 0x6e, 0x12, 0x1d, 0x0a, 0x0a, 0x70, 0x61, 0x79,
	0x6d, 0x65, 0x6e, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x70,
	0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x49, 0x64, 0x12, 0x17, 0x0a, 0x07, 0x75, 0x73, 0x65, 0x72,
	0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49,
	0x64, 0x12, 0x26, 0x0a, 0x0f, 0x70, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x5f, 0x74, 0x61, 0x73,
	0x6b, 0x5f, 0x69, 0x64, 0x18, 0x03, 0x20, 0x03, 0x28, 0x09, 0x52, 0x0d, 0x70, 0x61, 0x79, 0x6d,
	0x65, 0x6e, 0x74, 0x54, 0x61, 0x73, 0x6b, 0x49, 0x64, 0x12, 0x1a, 0x0a, 0x08, 0x74, 0x69, 0x6d,
	0x65, 0x6c, 0x69, 0x6e, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x02, 0x52, 0x08, 0x74, 0x69, 0x6d,
	0x65, 0x6c, 0x69, 0x6e, 0x65, 0x12, 0x39, 0x0a, 0x0c, 0x70, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74,
	0x5f, 0x66, 0x72, 0x65, 0x71, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x16, 0x2e, 0x63, 0x6f,
	0x72, 0x65, 0x2e, 0x50, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x46, 0x72, 0x65, 0x71, 0x75, 0x65,
	0x6e, 0x63, 0x79, 0x52, 0x0b, 0x70, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x46, 0x72, 0x65, 0x71,
	0x12, 0x2c, 0x0a, 0x12, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x5f, 0x70, 0x65, 0x72, 0x5f, 0x70,
	0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x18, 0x06, 0x20, 0x01, 0x28, 0x02, 0x52, 0x10, 0x61, 0x6d,
	0x6f, 0x75, 0x6e, 0x74, 0x50, 0x65, 0x72, 0x50, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x12, 0x2b,
	0x0a, 0x09, 0x70, 0x6c, 0x61, 0x6e, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28,
	0x0e, 0x32, 0x0e, 0x2e, 0x63, 0x6f, 0x72, 0x65, 0x2e, 0x50, 0x6c, 0x61, 0x6e, 0x54, 0x79, 0x70,
	0x65, 0x52, 0x08, 0x70, 0x6c, 0x61, 0x6e, 0x54, 0x79, 0x70, 0x65, 0x12, 0x35, 0x0a, 0x08, 0x65,
	0x6e, 0x64, 0x5f, 0x64, 0x61, 0x74, 0x65, 0x18, 0x08, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e,
	0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e,
	0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x07, 0x65, 0x6e, 0x64, 0x44, 0x61,
	0x74, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x61, 0x63, 0x74, 0x69, 0x76, 0x65, 0x18, 0x09, 0x20, 0x01,
	0x28, 0x08, 0x52, 0x06, 0x61, 0x63, 0x74, 0x69, 0x76, 0x65, 0x12, 0x2b, 0x0a, 0x06, 0x73, 0x74,
	0x61, 0x74, 0x75, 0x73, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x13, 0x2e, 0x63, 0x6f, 0x72,
	0x65, 0x2e, 0x50, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52,
	0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x2a, 0xa2, 0x01, 0x0a, 0x0d, 0x50, 0x61, 0x79, 0x6d,
	0x65, 0x6e, 0x74, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x1a, 0x0a, 0x16, 0x50, 0x41, 0x59,
	0x4d, 0x45, 0x4e, 0x54, 0x5f, 0x53, 0x54, 0x41, 0x54, 0x55, 0x53, 0x5f, 0x55, 0x4e, 0x4b, 0x4e,
	0x4f, 0x57, 0x4e, 0x10, 0x00, 0x12, 0x1a, 0x0a, 0x16, 0x50, 0x41, 0x59, 0x4d, 0x45, 0x4e, 0x54,
	0x5f, 0x53, 0x54, 0x41, 0x54, 0x55, 0x53, 0x5f, 0x43, 0x55, 0x52, 0x52, 0x45, 0x4e, 0x54, 0x10,
	0x01, 0x12, 0x1c, 0x0a, 0x18, 0x50, 0x41, 0x59, 0x4d, 0x45, 0x4e, 0x54, 0x5f, 0x53, 0x54, 0x41,
	0x54, 0x55, 0x53, 0x5f, 0x43, 0x4f, 0x4d, 0x50, 0x4c, 0x45, 0x54, 0x45, 0x44, 0x10, 0x02, 0x12,
	0x1c, 0x0a, 0x18, 0x50, 0x41, 0x59, 0x4d, 0x45, 0x4e, 0x54, 0x5f, 0x53, 0x54, 0x41, 0x54, 0x55,
	0x53, 0x5f, 0x43, 0x41, 0x4e, 0x43, 0x45, 0x4c, 0x4c, 0x45, 0x44, 0x10, 0x03, 0x12, 0x1d, 0x0a,
	0x19, 0x50, 0x41, 0x59, 0x4d, 0x45, 0x4e, 0x54, 0x5f, 0x53, 0x54, 0x41, 0x54, 0x55, 0x53, 0x5f,
	0x49, 0x4e, 0x5f, 0x44, 0x45, 0x46, 0x41, 0x55, 0x4c, 0x54, 0x10, 0x04, 0x42, 0x0e, 0x5a, 0x0c,
	0x2e, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x3b, 0x63, 0x6f, 0x72, 0x65, 0x62, 0x06, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_payment_plan_proto_rawDescOnce sync.Once
	file_payment_plan_proto_rawDescData = file_payment_plan_proto_rawDesc
)

func file_payment_plan_proto_rawDescGZIP() []byte {
	file_payment_plan_proto_rawDescOnce.Do(func() {
		file_payment_plan_proto_rawDescData = protoimpl.X.CompressGZIP(file_payment_plan_proto_rawDescData)
	})
	return file_payment_plan_proto_rawDescData
}

var file_payment_plan_proto_enumTypes = make([]protoimpl.EnumInfo, 1)
var file_payment_plan_proto_msgTypes = make([]protoimpl.MessageInfo, 1)
var file_payment_plan_proto_goTypes = []interface{}{
	(PaymentStatus)(0),            // 0: core.PaymentStatus
	(*PaymentPlan)(nil),           // 1: core.PaymentPlan
	(PaymentFrequency)(0),         // 2: core.PaymentFrequency
	(PlanType)(0),                 // 3: core.PlanType
	(*timestamppb.Timestamp)(nil), // 4: google.protobuf.Timestamp
}
var file_payment_plan_proto_depIdxs = []int32{
	2, // 0: core.PaymentPlan.payment_freq:type_name -> core.PaymentFrequency
	3, // 1: core.PaymentPlan.plan_type:type_name -> core.PlanType
	4, // 2: core.PaymentPlan.end_date:type_name -> google.protobuf.Timestamp
	0, // 3: core.PaymentPlan.status:type_name -> core.PaymentStatus
	4, // [4:4] is the sub-list for method output_type
	4, // [4:4] is the sub-list for method input_type
	4, // [4:4] is the sub-list for extension type_name
	4, // [4:4] is the sub-list for extension extendee
	0, // [0:4] is the sub-list for field type_name
}

func init() { file_payment_plan_proto_init() }
func file_payment_plan_proto_init() {
	if File_payment_plan_proto != nil {
		return
	}
	file_common_proto_init()
	if !protoimpl.UnsafeEnabled {
		file_payment_plan_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PaymentPlan); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_payment_plan_proto_rawDesc,
			NumEnums:      1,
			NumMessages:   1,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_payment_plan_proto_goTypes,
		DependencyIndexes: file_payment_plan_proto_depIdxs,
		EnumInfos:         file_payment_plan_proto_enumTypes,
		MessageInfos:      file_payment_plan_proto_msgTypes,
	}.Build()
	File_payment_plan_proto = out.File
	file_payment_plan_proto_rawDesc = nil
	file_payment_plan_proto_goTypes = nil
	file_payment_plan_proto_depIdxs = nil
}
